Docker Pull Command:
$ docker pull mysql


Starting a MySQL instance is simple:
$ docker run -p 3300:3306 --name mysql0 -e MYSQL_ROOT_PASSWORD="13Nzs14X><y-d mysql
$ docker run -p 3301:3306 --name mysql1 -e MYSQL_ROOT_PASSWORD="15Tkl16S^3-d mysql

十三能织素，十四学裁衣
13Nzs14X><y
十五弹箜篌，十六诵诗书
15Tkl16S^3


docker run -it --link mysql0:mysql --rm mysql sh -c 'exec mysql -h"$MYSQL_PORT_3306_TCP_ADDR-P"$MYSQL_PORT_3306_TCP_PORT-uroot -p"$MYSQL_ENV_MYSQL_ROOT_PASSWORD"'
docker run -it --link mysql1:mysql --rm mysql sh -c 'exec mysql -h"$MYSQL_PORT_3306_TCP_ADDR-P"$MYSQL_PORT_3306_TCP_PORT-uroot -p"$MYSQL_ENV_MYSQL_ROOT_PASSWORD"'


mysql> create database db0;
Query OK, 1 row affected (0.00 sec)

mysql> use db0;
Database changed
mysql>


mysql> create database db1;
Query OK, 1 row affected (0.00 sec)

mysql> use db1;
Database changed
mysql>

DROP TABLE IF EXISTS t_order_0;
DROP TABLE IF EXISTS t_order_item_0;
DROP TABLE IF EXISTS t_order_1;
DROP TABLE IF EXISTS t_order_item_1;

CREATE TABLE IF NOT EXISTS t_order_0 (order_id INT NOT NULL, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id));
CREATE TABLE IF NOT EXISTS t_order_1 (order_id INT NOT NULL, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id));
CREATE TABLE IF NOT EXISTS t_order_item_0 (item_id INT NOT NULL, order_id INT NOT NULL, user_id INT NOT NULL, PRIMARY KEY (item_id));
CREATE TABLE IF NOT EXISTS t_order_item_1 (item_id INT NOT NULL, order_id INT NOT NULL, user_id INT NOT NULL, PRIMARY KEY (item_id));

以下SQL在db0执行:

INSERT INTO t_order_0  VALUES (1000, 10, 'INIT');
INSERT INTO t_order_0  VALUES (1002, 10, 'INIT');
INSERT INTO t_order_0  VALUES (1004, 10, 'INIT');
INSERT INTO t_order_0  VALUES (1006, 10, 'INIT');
INSERT INTO t_order_0  VALUES (1008, 10, 'INIT');
INSERT INTO t_order_item_0  VALUES (100001, 1000, 10);
INSERT INTO t_order_item_0  VALUES (100201, 1002, 10);
INSERT INTO t_order_item_0  VALUES (100401, 1004, 10);
INSERT INTO t_order_item_0  VALUES (100601, 1006, 10);
INSERT INTO t_order_item_0  VALUES (100801, 1008, 10);

INSERT INTO t_order_1 VALUES (1001, 10, 'INIT');
INSERT INTO t_order_1 VALUES (1003, 10, 'INIT');
INSERT INTO t_order_1 VALUES (1005, 10, 'INIT');
INSERT INTO t_order_1 VALUES (1007, 10, 'INIT');
INSERT INTO t_order_1 VALUES (1009, 10, 'INIT');
INSERT INTO t_order_item_1 VALUES (100101, 1001, 10);
INSERT INTO t_order_item_1 VALUES (100301, 1003, 10);
INSERT INTO t_order_item_1 VALUES (100501, 1005, 10);
INSERT INTO t_order_item_1 VALUES (100701, 1007, 10);
INSERT INTO t_order_item_1 VALUES (100901, 1009, 10);


以下SQL在db1执行:

INSERT INTO t_order_0 VALUES (1100, 11, 'INIT');
INSERT INTO t_order_0 VALUES (1102, 11, 'INIT');
INSERT INTO t_order_0 VALUES (1104, 11, 'INIT');
INSERT INTO t_order_0 VALUES (1106, 11, 'INIT');
INSERT INTO t_order_0 VALUES (1108, 11, 'INIT');
INSERT INTO t_order_item_0 VALUES (110001, 1100, 11);
INSERT INTO t_order_item_0 VALUES (110201, 1102, 11);
INSERT INTO t_order_item_0 VALUES (110401, 1104, 11);
INSERT INTO t_order_item_0 VALUES (110601, 1106, 11);
INSERT INTO t_order_item_0 VALUES (110801, 1108, 11);

INSERT INTO t_order_1 VALUES (1101, 11, 'INIT');
INSERT INTO t_order_1 VALUES (1103, 11, 'INIT');
INSERT INTO t_order_1 VALUES (1105, 11, 'INIT');
INSERT INTO t_order_1 VALUES (1107, 11, 'INIT');
INSERT INTO t_order_1 VALUES (1109, 11, 'INIT');
INSERT INTO t_order_item_1 VALUES (110101, 1101, 11);
INSERT INTO t_order_item_1 VALUES (110301, 1103, 11);
INSERT INTO t_order_item_1 VALUES (110501, 1105, 11);
INSERT INTO t_order_item_1 VALUES (110701, 1107, 11);
INSERT INTO t_order_item_1 VALUES (110901, 1109, 11);

SELECT o.user_id, COUNT(*) 
FROM t_order o
JOIN t_order_item i
ON o.order_id=i.order_id
GROUP BY o.user_id;

SELECT o.user_id, COUNT(*)
FROM t_order_0 o
JOIN t_order_item_0 i
ON o.order_id=i.order_id
GROUP BY o.user_id;

SELECT o.user_id, COUNT(*)
FROM t_order_1 o
JOIN t_order_item_1 i
ON o.order_id=i.order_id
GROUP BY o.user_id;